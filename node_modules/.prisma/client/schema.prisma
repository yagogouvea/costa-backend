generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id               Int                     @id @default(autoincrement())
  nome             String
  cnpj             String
  contato          String?
  telefone         String?
  email            String?
  endereco         String?
  cep              String?
  cidade           String?
  estado           String?
  logo             String?
  nome_fantasia    String?
  camposAdicionais CampoAdicionalCliente[]
  clienteAuth      ClienteAuth?
  contratos        Contrato[]
}

model CampoAdicionalCliente {
  id        Int     @id @default(autoincrement())
  clienteId Int
  label     String
  campo     String
  cliente   Cliente @relation(fields: [clienteId], references: [id], map: "fk_campo_adicional_cliente")

  @@index([clienteId])
}

model Contrato {
  id                   Int             @id @default(autoincrement())
  clienteId            Int
  nome_interno         String?
  tipo                 TipoContrato?
  regiao               RegiaoContrato?
  valor_acionamento    Decimal?        @db.Decimal(10, 2)
  valor_nao_recuperado Decimal?        @db.Decimal(10, 2)
  valor_hora_extra     Decimal?        @db.Decimal(10, 2)
  valor_km_extra       Decimal?        @db.Decimal(10, 2)
  franquia_horas       String?
  franquia_km          Int?
  valor_km             Decimal?        @db.Decimal(10, 2)
  valor_base           Decimal?        @db.Decimal(10, 2)
  permite_negociacao   Boolean?        @default(false)
  cliente              Cliente         @relation(fields: [clienteId], references: [id], map: "fk_contrato_cliente")

  @@index([clienteId])
}

model Prestador {
  id                Int                     @id @default(autoincrement())
  nome              String
  cpf               String
  cod_nome          String?
  telefone          String?
  email             String?
  aprovado          Boolean                 @default(false)
  tipo_pix          String?
  chave_pix         String?
  cep               String?
  endereco          String?
  bairro            String?
  cidade            String?
  estado            String?
  valor_acionamento Float?
  franquia_horas    String?
  franquia_km       Float?
  valor_hora_adc    Float?
  valor_km_adc      Float?
  criado_em         DateTime                @default(now())
  origem            String?                 @default("interno")
  latitude          Float?
  longitude         Float?
  modelo_antena     String?
  apoiosAdicionais  ApoioAdicional[]
  funcoes           FuncaoPrestador[]
  rastreamentos     RastreamentoPrestador[]
  regioes           RegiaoPrestador[]
  veiculos          TipoVeiculoPrestador[]
  usuarios          UsuarioPrestador[]
}

model PrestadorNaoCadastrado {
  id            Int        @id @default(autoincrement())
  nome          String
  telefone      String?
  ocorrencia_id Int
  criado_em     DateTime   @default(now())
  ocorrencia    Ocorrencia @relation(fields: [ocorrencia_id], references: [id], map: "fk_prestador_nao_cadastrado_ocorrencia")

  @@index([ocorrencia_id])
}

model ApoioAdicional {
  id                      Int        @id @default(autoincrement())
  ocorrencia_id           Int
  nome_prestador          String?
  is_prestador_cadastrado Boolean    @default(true)
  prestador_id            Int?
  telefone                String?
  hora_inicial            DateTime?
  hora_final              DateTime?
  km_inicial              Float?
  km_final                Float?
  franquia_km             Boolean?   @default(false)
  observacoes             String?
  ordem                   Int
  criado_em               DateTime   @default(now())
  atualizado_em           DateTime   @updatedAt
  hora_inicial_local      DateTime?
  ocorrencia              Ocorrencia @relation(fields: [ocorrencia_id], references: [id], onDelete: Cascade)
  prestador               Prestador? @relation(fields: [prestador_id], references: [id])

  @@index([ocorrencia_id])
  @@index([prestador_id])
}

model FuncaoPrestador {
  id          Int       @id @default(autoincrement())
  funcao      String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id], map: "fk_funcao_prestador")

  @@index([prestadorId])
}

model RegiaoPrestador {
  id          Int       @id @default(autoincrement())
  regiao      String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id], map: "fk_regiao_prestador")

  @@index([prestadorId])
}

model TipoVeiculoPrestador {
  id          Int       @id @default(autoincrement())
  tipo        String
  prestadorId Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id], map: "fk_tipo_veiculo_prestador")

  @@index([prestadorId])
}

model Veiculo {
  id         Int      @id @default(autoincrement())
  placa      String   @unique
  modelo     String?
  marca      String?
  cor        String?
  fabricante String?
  ano        Int?
  createdAt  DateTime @default(now())
}

model Ocorrencia {
  id                        Int                      @id @default(autoincrement())
  placa1                    String
  placa2                    String?
  placa3                    String?
  modelo1                   String?
  cor1                      String?
  cliente                   String
  tipo                      String
  tipo_veiculo              String?
  coordenadas               String?
  cep                       String?
  endereco                  String?
  bairro                    String?
  cidade                    String?
  estado                    String?
  cpf_condutor              String?
  nome_condutor             String?
  transportadora            String?
  valor_carga               Float?
  notas_fiscais             String?
  os                        String?
  origem_bairro             String?
  origem_cidade             String?
  origem_estado             String?
  prestador                 String?
  inicio                    DateTime?
  chegada                   DateTime?
  termino                   DateTime?
  km                        Float?
  despesas                  Float?
  descricao                 String?
  resultado                 String?
  status                    OcorrenciaStatus         @default(em_andamento)
  encerrada_em              DateTime?
  criado_em                 DateTime                 @default(now())
  atualizado_em             DateTime                 @updatedAt
  data_acionamento          DateTime?
  km_final                  Float?
  km_inicial                Float?
  despesas_detalhadas       Json?
  operador                  String?
  passagem_servico          String?
  cidade_destino            String?
  hashRastreamento          String?
  km_acl                    Float?
  operacao                  String?
  planta_origem             String?
  sub_cliente               String?
  chegada_qth               String?
  data_chamado              DateTime?
  data_recuperacao          DateTime?
  destino                   String?
  endereco_loja             String?
  hora_chamado              String?
  local_abordagem           String?
  nome_guincho              String?
  tipo_remocao              String?
  detalhes_local            String?
  endereco_base             String?
  nome_loja                 String?
  sub_resultado             String?
  apoiosAdicionais          ApoioAdicional[]
  checklist                 CheckList?
  fotos                     Foto[]
  prestadoresNaoCadastrados PrestadorNaoCadastrado[]
  rastreamentos             RastreamentoPrestador[]

  @@index([placa1])
  @@index([status])
}

model CheckList {
  id                         Int        @id @default(autoincrement())
  ocorrencia_id              Int        @unique
  loja_selecionada           Boolean?   @default(false)
  nome_loja                  String?
  endereco_loja              String?
  nome_atendente             String?
  matricula_atendente        String?
  guincho_selecionado        Boolean?   @default(false)
  tipo_guincho               String?
  valor_guincho              String?
  telefone_guincho           String?
  nome_empresa_guincho       String?
  nome_motorista_guincho     String?
  destino_guincho            String?
  endereco_destino_guincho   String?
  apreensao_selecionada      Boolean?   @default(false)
  nome_dp_batalhao           String?
  endereco_apreensao         String?
  numero_bo_noc              String?
  // âœ… NOVO BLOCO: Liberado no local
  liberado_local_selecionado Boolean?   @default(false)
  liberado_nome_responsavel  String?
  liberado_numero_referencia String?
  recuperado_com_chave       String?
  posse_veiculo              String?
  observacao_posse           String?
  avarias                    String?
  detalhes_avarias           String?
  fotos_realizadas           String?
  justificativa_fotos        String?
  observacao_ocorrencia      String?
  criado_em                  DateTime   @default(now())
  atualizado_em              DateTime   @updatedAt
  dispensado_checklist       Boolean?   @default(false)
  ocorrencia                 Ocorrencia @relation(fields: [ocorrencia_id], references: [id], onDelete: Cascade)
}

model Foto {
  id           Int        @id @default(autoincrement())
  url          String
  legenda      String
  ocorrenciaId Int
  createdAt    DateTime   @default(now())
  cropArea     Json?
  cropX        Float?     @default(0)
  cropY        Float?     @default(0)
  zoom         Float?     @default(1)
  ocorrencia   Ocorrencia @relation(fields: [ocorrenciaId], references: [id], map: "fk_foto_ocorrencia")

  @@index([ocorrenciaId])
}

model Relatorio {
  id              Int      @id @default(autoincrement())
  ocorrenciaId    Int
  cliente         String
  tipo            String
  dataAcionamento DateTime
  caminhoPdf      String
  criadoEm        DateTime @default(now())
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         UserRole
  permissions  Json
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model ClienteAuth {
  id               Int      @id @default(autoincrement())
  cliente_id       Int      @unique
  cnpj_normalizado String   @unique
  senha_hash       String
  ativo            Boolean  @default(true)
  criado_em        DateTime @default(now())
  atualizado_em    DateTime @updatedAt
  cliente          Cliente  @relation(fields: [cliente_id], references: [id], map: "fk_cliente_auth_cliente")

  @@index([cnpj_normalizado])
}

model UsuarioPrestador {
  id              Int       @id @default(autoincrement())
  prestador_id    Int
  email           String    @unique
  senha_hash      String
  ativo           Boolean   @default(true)
  criado_em       DateTime  @default(now())
  atualizado_em   DateTime  @updatedAt
  primeiro_acesso Boolean   @default(true)
  prestador       Prestador @relation(fields: [prestador_id], references: [id], map: "fk_usuario_prestador")

  @@index([prestador_id])
  @@index([email])
}

model RastreamentoPrestador {
  id            Int         @id @default(autoincrement())
  prestador_id  Int
  ocorrencia_id Int?
  latitude      Float
  longitude     Float
  velocidade    Float?
  direcao       Float?
  altitude      Float?
  precisao      Float?
  bateria       Int?
  sinal_gps     String?
  observacoes   String?
  status        String      @default("ativo")
  timestamp     DateTime    @default(now())
  ocorrencia    Ocorrencia? @relation(fields: [ocorrencia_id], references: [id], map: "fk_rastreamento_ocorrencia")
  prestador     Prestador   @relation(fields: [prestador_id], references: [id], map: "fk_rastreamento_prestador")

  @@index([prestador_id])
  @@index([ocorrencia_id])
  @@index([timestamp])
}

enum TipoContrato {
  padrao_regiao
  acl_km
  padrao_fixo
  valor_fechado
}

enum RegiaoContrato {
  CAPITAL
  GRANDE_SP
  INTERIOR
  OUTROS_ESTADOS
}

enum UserRole {
  admin
  manager
  operator
  client
}

enum OcorrenciaStatus {
  em_andamento
  concluida
  cancelada
  aguardando
}
