#!/usr/bin/env node
/**
 * Script para criar usu√°rio tempor√°rio para teste
 * Execute: node scripts/create-temp-user.js
 */

import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcrypt';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

const prisma = new PrismaClient();

const createTempUser = async () => {
  try {
    console.log('üîß Criando usu√°rio tempor√°rio...');
    
    // Verificar se o usu√°rio j√° existe
    const existingUser = await prisma.user.findUnique({
      where: { email: 'admin@costa.com.br' }
    });

    if (existingUser) {
      console.log('‚ö†Ô∏è Usu√°rio j√° existe, removendo...');
      await prisma.user.delete({
        where: { email: 'admin@costa.com.br' }
      });
      console.log('‚úÖ Usu√°rio removido');
    }

    // Hash da senha
    const hashedPassword = await bcrypt.hash('123456', 10);

    // Permiss√µes completas do usu√°rio
    const permissions = [
      // Usu√°rios
      'create:user',
      'read:user',
      'update:user',
      'delete:user',
      
      // Clientes
      'create:client',
      'read:client',
      'update:client',
      'delete:client',
      
      // Ocorr√™ncias
      'create:ocorrencia',
      'read:ocorrencia',
      'update:ocorrencia',
      'delete:ocorrencia',
      
      // Prestadores
      'create:prestador',
      'read:prestador',
      'update:prestador',
      'delete:prestador',
      
      // Contratos
      'create:contrato',
      'read:contrato',
      'update:contrato',
      'delete:contrato',
      
      // Relat√≥rios
      'create:relatorio',
      'read:relatorio',
      'update:relatorio',
      'delete:relatorio',
      
      // Dashboard
      'read:dashboard',
      
      // Fotos
      'create:foto',
      'read:foto',
      'update:foto',
      'delete:foto',
      'upload:foto',
      
      // Ve√≠culos
      'create:veiculo',
      'read:veiculo',
      'update:veiculo',
      'delete:veiculo',
      
      // Rastreamento
      'create:rastreamento',
      'read:rastreamento',
      'update:rastreamento',
      'delete:rastreamento',
      
      // Pagamentos
      'create:pagamento',
      'read:pagamento',
      'update:pagamento',
      'delete:pagamento',
      
      // Checklist
      'create:checklist',
      'read:checklist',
      'update:checklist',
      'delete:checklist',
      
      // Apoios Adicionais
      'create:apoio',
      'read:apoio',
      'update:apoio',
      'delete:apoio'
    ];

    // Criar usu√°rio
    const user = await prisma.user.create({
      data: {
        name: 'Admin Costa - Usu√°rio Teste',
        email: 'admin@costa.com.br',
        passwordHash: hashedPassword,
        role: 'admin',
        permissions: JSON.stringify(permissions),
        active: true,
      },
    });

    console.log('‚úÖ Usu√°rio criado com sucesso!');
    console.log('üìã Detalhes do usu√°rio:');
    console.log(`   ID: ${user.id}`);
    console.log(`   Nome: ${user.name}`);
    console.log(`   Email: ${user.email}`);
    console.log(`   Role: ${user.role}`);
    console.log(`   Ativo: ${user.active}`);
    console.log('');
    console.log('üîë Credenciais de Login:');
    console.log(`   Email: admin@costa.com.br`);
    console.log(`   Senha: 123456`);
    console.log('');
    console.log('‚ö†Ô∏è IMPORTANTE: Altere a senha ap√≥s o primeiro login!');

  } catch (error) {
    console.error('‚ùå Erro ao criar usu√°rio:', error);
  } finally {
    await prisma.$disconnect();
  }
};

// Executar o script
createTempUser();












